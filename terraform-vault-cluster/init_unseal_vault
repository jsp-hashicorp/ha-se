#!/bin/bash

export VAULT_ADDR='http://127.0.0.1:8200'
echo `vault operator init' 2>&1 > vault_init.log 
cat <<EOF | tee -a init.out
Unseal Key 1: M/iQjJG36DADW1hHKjNrPzeFYOvXJTI1sX/XJLP2dLGD
Unseal Key 2: Ce89kkAxEOfFNi1jngRuzGKTQsOS8W6QSaREp3aQd6JA
Unseal Key 3: lsk9VzgvKgXfy2ru9dfkOTLx7db5gWRLksoX3QPDPZuu
Unseal Key 4: Sz3DD3L22pkERPRiG3l3J75EBhL35g7fPPYLhwyvgZiM
Unseal Key 5: YvgaodnH1hlgU1V1StwSUJPT3zr0PYSXp0ueyPUTxgx3

Initial Root Token: s.N8WfDWpnMzLeC6HxSIQRMs7U

Vault initialized with 5 key shares and a key threshold of 3. Please securely
distribute the key shares printed above. When the Vault is re-sealed,
restarted, or stopped, you must supply at least 3 of these keys to unseal it
before it can start servicing requests.

Vault does not store the generated master key. Without at least 3 key to
reconstruct the master key, Vault will remain permanently sealed!

It is possible to generate new unseal keys, provided you have a quorum of
existing unseal keys shares. See "vault operator rekey" for more information
EOF
export VAULT_TOKEN='s.CcgStydJ4m6EyZHlSsSn8HC7'
'
ubuntu@ip-172-31-60-11:/var/log$ vault operator unseal 1wiiT0G9TeFURHruiWXD/a3hm5YfwK5nXVdAH2VTlZ+K



export VAULT_API_ADDR='http://127.0.0.1:8200'
export VAULT_ADDR='http://127.0.0.1:8200'
export VAULT_TOKEN='s.CcgStydJ4m6EyZHlSsSn8HC7'
export VAULT_UI=http://127.0.0.1:8200/ui

Before Starting the Scenario.
Double-check the DB Connection

Step 1) Login in to Vault using token
vault login s.CcgStydJ4m6EyZHlSsSn8HC7

Step 2) Enable 
vault secrets enable database

vault write database/config/postgresql plugin_name=postgresql-database-plugin allowed_roles=readonly connection_url=postgresql://mydb1:Welcome1@mydb1.ciekyq8k24rj.ap-northeast-2.rds.amazonaws.com:5432/mydb1


tee readonly.sql <<EOF
  CREATE ROLE "{{name}}" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';
  GRANT SELECT ON ALL TABLES IN SCHEMA public TO "{{name}}";
EOF

vault write database/roles/readonly db_name=postgresql \
        creation_statements=@readonly.sql \
        default_ttl=1h max_ttl=24h


tee apps-policy.hcl <<EOF
# Get credentials from the database secret engine
path "database/creds/readonly" {
  capabilities = [ "read" ]
}
EOF


vault policy write apps apps-policy.hcl

vault token create -policy="apps"

vault read database/creds/readonly

psql --host=mydb1.ciekyq8k24rj.ap-northeast-2.rds.amazonaws.com --port=5432 --username=mydb1 --password=Welcome1 --dbname=mydb1

\du

vault lease renew database/creds/readonly/IQKUMCTg3M5QTRZ0abmLKjTX
vault lease revoke database/creds/readonly/3e8174da-6ca0-143b-aa8c-4c238aa02809

vault secrets disabe database